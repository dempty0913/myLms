<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dash">
	<select id="dashBoardList" parameterType="map" resultType="com.sp.lms.dashBoard.DashBoard">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				SELECT lectureApplyNum, l.lectureNum, l.userId, userName, lectureName, lectureInfo, major,
						year,semester,day,time,l.regDate,midSDate,finSDate, NVL(a.status, 0) status
				FROM lecture l
				JOIN member m ON l.userId = m.userId
				JOIN lectureApply a ON l.lectureNum = a.lectureNum
				WHERE a.userId = #{userId}
				ORDER BY l.lectureNum DESC
			) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	
	<select id="dataCount" parameterType="map" resultType="integer">
		SELECT NVL(COUNT(*), 0) FROM lectureApply WHERE userId=#{userId}
	</select>
	
	<delete id="deleteDash" parameterType="integer">
		DELETE FROM lectureApply WHERE lectureApplyNum=#{lectureApplyNum}
	</delete>
	
	<select id="detailList" parameterType="integer" resultType="com.sp.lms.dashBoard.DashBoard">
		SELECT lectureNum, lectureName, userName, year, semester
		FROM lecture l
		JOIN member m ON l.userId = m.userId
		WHERE lectureNum=#{lectureNum}
	</select>
	
	<select id="videoList" parameterType="map" resultType="com.sp.lms.dashBoard.Video">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				select v.lectureNum, a.lectureApplyNum, videoFileNum, videoName, TO_CHAR(v.regDate, 'YYYY-MM-DD') regDate, videoTotalTime, videoFileName
				from lectureVideoFile v
				join lecture l on l.lectureNum=v.lectureNum
				join lectureApply a on l.lectureNum=a.lectureNum
				where a.userId=#{userId} and a.lectureNum=#{lectureNum}
				ORDER BY videoFileNum DESC
			) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	<select id="videoTime" parameterType="map" resultType="com.sp.lms.dashBoard.Video">
		select v.lectureNum, pal.lectureApplyNum, lectureName, 
					NVL(pal.videoFileNum,0) videoFileNum, NVL(saveTime,0) saveTime, 
					NVL(pal.status,0) status
		from (  select a.lectureNum, a.lectureApplyNum, lectureName, p.videoFileNum, NVL(saveTime,0) saveTime, NVL(p.status,0) status
		        from pauseSave p
		        join lectureApply a on p.lectureApplyNum=a.lectureApplyNum
		        join lecture l on l.lectureNum=a.lectureNum
		        where a.userId=#{userId}
		     ) pal
		     full outer join
		     (
		        select lectureNum, videoFileNum
		        from lectureVideoFile v
		     ) v
		     on v.videoFileNum=pal.videoFileNum
		where v.lectureNum=#{lectureNum}
	</select>
	
	<select id="videoCount" parameterType="map" resultType="integer">
		SELECT NVL(COUNT(*), 0) FROM lectureVideoFile WHERE lectureNum=#{lectureNum}
	</select>
	
	<select id="videoArticle" parameterType="map" resultType="com.sp.lms.dashBoard.Video">
		SELECT lectureNum, videoFileNum, videoTotalTime, videoName, videoFileName, regDate
		FROM lectureVideoFile
		WHERE videoFileNum=#{videoFileNum}
	</select>
	
	<insert id="saveTime" parameterType="map">
		INSERT INTO pauseSave(pauseSaveNum, videoFileNum, lectureApplyNum, saveTime)
		VALUES(pauseSave_seq.NEXTVAL, #{videoFileNum}, #{lectureApplyNum}, #{saveTime})
	</insert>
	
	<update id="updateSaveTime" parameterType="map">
		UPDATE pauseSave SET saveTime=#{saveTime} 
		WHERE videoFileNum=#{videoFileNum} AND lectureApplyNum=#{lectureApplyNum}
	</update>
	
	<select id="getSaveTime" parameterType="map" resultType="integer">
		SELECT NVL(MAX(saveTime), 0) FROM pauseSave WHERE videoFileNum=#{videoFileNum} AND lectureApplyNum=#{lectureApplyNum}
	</select>
	
	
	<select id="projectList" parameterType="map" resultType="com.sp.lms.teacher.lecture.Project">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				SELECT projectNum, lectureNum,projectSubject, TO_CHAR(regDate, 'YYYY-MM-DD') regDate, TO_CHAR(eDate, 'YYYY-MM-DD') eDate
				FROM project
				WHERE lectureNum=#{lectureNum}
				ORDER BY projectNum DESC
			) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	
	<select id="projectCount" parameterType="map" resultType="integer">
		SELECT NVL(COUNT(*), 0) FROM project WHERE lectureNum=#{lectureNum}
	</select>
	
	<select id="projectDetail" parameterType="map" resultType="com.sp.lms.dashBoard.ProjectSubmit">
		SELECT p.projectNum, p.lectureNum, projectSubject, projectContent,
		TO_CHAR(p.regDate, 'YYYY-MM-DD') regDate, TO_CHAR(eDate, 'YYYY-MM-DD') eDate,
		                f.saveFileName, f.originalFileName
		FROM project p
		LEFT OUTER JOIN projectFile f ON f.projectNum=p.projectNum
		<where>
			p.projectNum=#{projectNum}
		</where>
	</select>
	
	<!-- 과제 제출 여부 -->
	<select id="submitStatus" resultType="com.sp.lms.dashBoard.ProjectStatus" parameterType="map">
		SELECT p.projectsubject, s.originalFileName, s.submitNum, lectureApplyNum, TO_CHAR(s.submitDate, 'YYYY-MM-DD') submitDate
		FROM
		(SELECT * 
		    FROM project
		    WHERE lectureNum = #{lectureNum}) p
		    FULL OUTER JOIN 
		        (SELECT * 
		            FROM submit
		            WHERE lectureApplyNum = #{lectureApplyNum} ) s
		            ON p.projectNum = s.projectNum
		<where>
			<if test="projectNum != null">
				p.projectNum=#{projectNum}
			</if>
		</where>
		ORDER BY p.projectNum DESC
	</select>
	
	<insert id="submitProject" parameterType="com.sp.lms.dashBoard.ProjectSubmit">
		INSERT INTO submit(submitNum, projectNum, lectureApplyNum, originalFileName, 
							saveFileName, submitDate)
		VALUES(submit_seq.NEXTVAL, #{projectNum}, #{lectureApplyNum}, 
				#{originalFileName, jdbcType=VARCHAR}, #{saveFileName, jdbcType=VARCHAR}, SYSDATE)
	</insert>
	
	<update id="updateProject" parameterType="com.sp.lms.dashBoard.ProjectSubmit">
		UPDATE submit SET originalFileName=#{originalFileName, jdbcType=VARCHAR}, 
						saveFileName=#{saveFileName, jdbcType=VARCHAR}, submitDate=SYSDATE
		WHERE submitNum=#{submitNum}
	</update>
	
</mapper>