<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tLecture">
	<insert id="insertLecture" parameterType="com.sp.lms.teacher.lecture.Lecture">
		INSERT INTO lecture(lectureNum, userId, lectureName, lectureInfo, 
						major,year,semester,day,time,regDate,midSDate,finSDate)
		VALUES(lecture_seq.NEXTVAL, #{userId}, #{lectureName}, #{lectureInfo}, #{major}, 
				#{year}, #{semester}, #{day}, #{time}, SYSDATE, #{midSDate}, #{finSDate})
	</insert>
	
	<select id="lectureCount" parameterType="map" resultType="integer">
		SELECT NVL(COUNT(*), 0) 
		FROM lecture 
		WHERE userId = #{userId}
	</select>
	
	<select id="lectureList" parameterType="map" resultType="com.sp.lms.teacher.lecture.Lecture">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				SELECT lectureNum, userId, lectureName, lectureInfo, major,
						year,semester,day,time,regDate,midSDate,finSDate
				FROM lecture
				WHERE userId = #{userId}
			) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	
	<select id="lectureNameList" parameterType="map" resultType="com.sp.lms.teacher.lecture.Lecture">
		SELECT lectureNum, userId, lectureName, lectureInfo, major,
				year,semester,day,time,regDate,midSDate,finSDate
		FROM lecture
		WHERE userId = #{userId}
	</select>
	
	<select id="lectureDetail" parameterType="integer" resultType="com.sp.lms.teacher.lecture.Lecture">
		SELECT * FROM lecture WHERE lectureNum=#{lectureNum}
	</select>
	
	<update id="updateLecture" parameterType="com.sp.lms.teacher.lecture.Lecture">
		UPDATE lecture SET lectureName=#{lectureName}, lectureInfo=#{lectureInfo}, 
						major=#{major},year=#{year},semester=#{semester},
						day=#{day},time=#{time},midSDate=#{midSDate},finSDate=#{finSDate}
		WHERE lectureNum=#{lectureNum}
	</update>
	
	<delete id="deleteLecture" parameterType="integer">
		DELETE FROM lecture WHERE lectureNum = #{lectureNum}
	</delete>
	
	
	<!-- 영상 -->
	<insert id="insertVideo" parameterType="com.sp.lms.teacher.lecture.Video">
		INSERT INTO lectureVideoFile(videoFileNum, lectureNum, videoTotalTime, videoName, videoFileName, regDate)
		VALUES (lectureVideoFile_seq.NEXTVAL, #{lectureNum}, #{videoTotalTime}, #{videoName}, #{videoFileName}, SYSDATE)
	</insert>
	
	<select id="videoList" parameterType="map" resultType="com.sp.lms.teacher.lecture.Video">
		SELECT l.lectureNum, videoFileNum, lectureName, videoName, videoTotalTime, TO_CHAR(v.regDate, 'YYYY-MM-DD') regDate
		FROM lecture l
		JOIN lectureVideoFile v ON l.lectureNum=v.lectureNum
		WHERE userId=#{userId}
	</select>
	
	
	<!-- 과제 -->
	<insert id="insertProject" parameterType="com.sp.lms.teacher.lecture.Project">
		<selectKey keyProperty="projectNum" resultType="Integer" order="BEFORE">
			SELECT project_seq.NEXTVAL FROM dual
		</selectKey>
		INSERT ALL 
			INTO project(projectNum, lectureNum, projectSubject, projectContent, regDate, eDate)
			VALUES(#{projectNum}, #{lectureNum}, #{projectSubject}, #{projectContent}, SYSDATE, #{eDate})
		
			INTO projectFile(projectFileNum, projectNum, originalFileName, saveFileName)
			VALUES(projectFile_seq.NEXTVAL, #{projectNum}, #{originalFileName, jdbcType=VARCHAR}, #{saveFileName, jdbcType=VARCHAR})
	
		SELECT * FROM dual
	</insert>
	
	<select id="projectList" parameterType="map" resultType="com.sp.lms.teacher.lecture.Project">
		SELECT projectNum, p.lectureNum, projectSubject, eDate, lectureName, TO_CHAR(p.regDate, 'YYYY-MM-DD') regDate
		FROM project p
		JOIN lecture l ON p.lectureNum=l.lectureNum
		WHERE userId=#{userId}
	</select>
</mapper>